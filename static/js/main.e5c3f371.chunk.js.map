{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/ContackFilter/ContactFilter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Phonebook/Phonebook.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContackFilter/ContactFilter.jsx","components/App.jsx","index.js"],"names":["module","exports","PhoneBook","state","name","number","handleChange","e","setState","target","value","reset","handleSubmit","preventDefault","alert","props","onAddContact","this","className","styles","form","onSubmit","label","htmlFor","input","type","onChange","btn","Component","Contact","onDeleteContact","contact","onClick","ContactList","items","length","contact_list","map","el","key","id","ContactFilter","onChangeFilter","App","contacts","filter","changeFilter","addContact","find","ContactToAdd","shortid","generate","deleteContact","fromLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5c3f371.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__3C4CQ\",\"label\":\"Phonebook_label__2k3jp\",\"input\":\"Phonebook_input__2tveg\",\"btn\":\"Phonebook_btn__1roAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFilter_form__fthjy\",\"input\":\"ContactFilter_input__3IHUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2JW_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2iLEY\",\"name\":\"Contact_name__3Zukt\",\"number\":\"Contact_number__1eYbH\",\"btn\":\"Contact_btn__32nw5\"};","import React, { Component } from 'react';\r\nimport styles from './Phonebook.module.css';\r\n\r\nexport default class PhoneBook extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (!name || !number) return alert('Заполните все поля');\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label} htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n        <br />\r\n        <label className={styles.label} htmlFor=\"number\">\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n        <button\r\n          className={styles.btn}\r\n          type=\"submit\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './Contact.module.css';\r\n\r\nconst Contact = ({ name, number, onDeleteContact }) => (\r\n  <div className={styles.contact}>\r\n    <p className={styles.name}> {name} </p>{' '}\r\n    <p className={styles.number}> {number} </p>{' '}\r\n    <button type=\"button\" onClick={onDeleteContact} className={styles.btn}>\r\n      {' '}\r\n      Delete{' '}\r\n    </button>{' '}\r\n  </div>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.string.isRequired,\r\n  onDeleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport Contact from '../Contact/Contact.jsx';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) =>\r\n  items.length > 0 && (\r\n    <ul className={styles.contact_list}>\r\n      {' '}\r\n      {items.map(el => (\r\n        <li key={el.id}>\r\n          <Contact {...el} onDeleteContact={() => onDeleteContact(el.id)} />{' '}\r\n        </li>\r\n      ))}{' '}\r\n    </ul>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <form className={styles.form}>\r\n    <label>\r\n      Find contacts by name{' '}\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />{' '}\r\n    </label>{' '}\r\n  </form>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: T.string,\r\n  onChangeFilter: T.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport PhoneBook from './Phonebook/Phonebook.jsx';\r\nimport ContactList from './ContactList/ContactList.jsx';\r\nimport ContactFilter from './ContackFilter/ContactFilter.jsx';\r\n\r\nconst filterContacts = (contacts, filter) => {\r\n  return contacts.filter(el =>\r\n    el.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const fromLS = localStorage.getItem('contacts');\r\n\r\n    if (fromLS) {\r\n      const contacts = JSON.parse(fromLS);\r\n\r\n      this.setState({ contacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContact = contact => {\r\n    const { contacts } = this.state;\r\n    const sameContact = contacts.find(el => el.name === contact.name);\r\n\r\n    if (!sameContact) {\r\n      const ContactToAdd = {\r\n        id: shortid.generate(),\r\n        ...contact,\r\n      };\r\n      this.setState(state => ({\r\n        contacts: [...state.contacts, ContactToAdd],\r\n      }));\r\n    } else alert(`${contact.name} contact is allready exist`);\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(el => el.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = filterContacts(contacts, filter);\r\n\r\n    return (\r\n      <section>\r\n        <h1>Phonebook</h1>\r\n        <PhoneBook onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n        <ContactList\r\n          items={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}